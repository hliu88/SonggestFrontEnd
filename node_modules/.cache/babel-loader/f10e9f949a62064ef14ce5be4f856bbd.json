{"ast":null,"code":"var _jsxFileName = \"/Users/guanchenliu/Dropbox/College/CS4523/Songgest/frontend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = 0;\nlet page;\npage = /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"hi\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 8\n}, this); // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   ); \n// }\n// function App(){\n//   if(state === 0){\n//     page = <p>...</p>\n//   }\n// }\n// return = this.App\n// ReactDOM.render(\n//   {App},\n//   document.getElementById('root')\n// );\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // data: null,\n      playlistURL: null,\n      submitted: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState() {\n    this.setState({\n      data: 'Data updated...'\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      playlistURL: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const temp = encodeURIComponent(event.target.value).replace(':', '%3A').replace('/', '%2F');\n    this.setState({\n      submitted: event.target.value\n    });\n    alert('submitted: ' + this.state.playlistURL);\n  }\n\n  renderFunc() {\n    if (this.state.submitted === null) {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Import Playlist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.playlistURL,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.submitted !== null && this.state.playlistURL !== null) {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderFunc()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  } // render() {\n  //    return (\n  //       <div>\n  //         <form>\n  //         <label>\n  //           Name:\n  //           <input type=\"text\" name=\"name\" />\n  //         </label>\n  //         <input type=\"submit\" value=\"Submit\" />\n  //         </form>\n  //          <button onClick = {this.updateState}>CLICK</button>\n  //          <h4>{this.state.data}</h4>\n  //       </div>\n  //    );\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guanchenliu/Dropbox/College/CS4523/Songgest/frontend/src/App.js"],"names":["React","ReactDOM","state","page","App","Component","constructor","props","playlistURL","submitted","handleChange","bind","handleSubmit","updateState","setState","data","event","target","value","temp","encodeURIComponent","replace","alert","renderFunc","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,OAAO,WAAP;;AACA,MAAMC,KAAK,GAAG,CAAd;AACA,IAAIC,IAAJ;AACAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AAEA,SAAKL,KAAL,GAAa;AACV;AACAM,MAAAA,WAAW,EAAE,IAFH;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AAEF;;AAEDE,EAAAA,WAAW,GAAG;AACX,SAAKC,QAAL,CAAc;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAd;AACF;;AACDL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAAK,SAAKF,QAAL,CAAc;AAACN,MAAAA,WAAW,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AAAoD;;AAC7EN,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB,UAAMG,IAAI,GAAGC,kBAAkB,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB,CAAuCG,OAAvC,CAA+C,GAA/C,EAAoD,KAApD,EAA2DA,OAA3D,CAAmE,GAAnE,EAAwE,KAAxE,CAAb;AACA,SAAKP,QAAL,CAAc;AAACL,MAAAA,SAAS,EAAEO,KAAK,CAACC,MAAN,CAAaC;AAAzB,KAAd;AACAI,IAAAA,KAAK,CAAC,gBAAgB,KAAKpB,KAAL,CAAWM,WAA5B,CAAL;AACD;;AAEDe,EAAAA,UAAU,GAAE;AACV,QAAG,KAAKrB,KAAL,CAAWO,SAAX,KAAyB,IAA5B,EAAiC;AAC/B,0BACE;AAAM,QAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA,gCACE;AAAA,sDAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAE,KAAKV,KAAL,CAAWM,WAArC;AAAkD,YAAA,QAAQ,EAAE,KAAKE;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AASD;;AACD,QAAG,KAAKR,KAAL,CAAWO,SAAX,KAAyB,IAAzB,IAAiC,KAAKP,KAAL,CAAWM,WAAX,KAA2B,IAA/D,EAAoE,CAEnE;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKD,UAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAjD+B,CAkDhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAlEgC;;AAoElC,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nconst state = 0;\nlet page;\npage = <p>hi</p>\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   ); \n// }\n// function App(){\n//   if(state === 0){\n//     page = <p>...</p>\n//   }\n// }\n// return = this.App\n\n// ReactDOM.render(\n//   {App},\n//   document.getElementById('root')\n// );\nclass App extends React.Component {\n\n  constructor(props) {\n     super(props);\n\n     this.state = {\n        // data: null,\n        playlistURL: null,\n        submitted: null,\n     }\n     this.handleChange = this.handleChange.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.updateState = this.updateState.bind(this);\n\n  };\n\n  updateState() {\n     this.setState({data: 'Data updated...'})\n  }\n  handleChange(event) {    this.setState({playlistURL: event.target.value});  }\n  handleSubmit(event) {\n    const temp = encodeURIComponent(event.target.value).replace(':', '%3A').replace('/', '%2F')\n    this.setState({submitted: event.target.value})\n    alert('submitted: ' + this.state.playlistURL)\n  }\n\n  renderFunc(){\n    if(this.state.submitted === null){\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Import Playlist:\n            <input type=\"text\" value={this.state.playlistURL} onChange={this.handleChange} />        \n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n    if(this.state.submitted !== null && this.state.playlistURL !== null){\n\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderFunc()}\n      </div>\n    );\n  }\n  // render() {\n  //    return (\n  //       <div>\n  //         <form>\n  //         <label>\n  //           Name:\n  //           <input type=\"text\" name=\"name\" />\n  //         </label>\n  //         <input type=\"submit\" value=\"Submit\" />\n  //         </form>\n\n\n  //          <button onClick = {this.updateState}>CLICK</button>\n  //          <h4>{this.state.data}</h4>\n  //       </div>\n  //    );\n  // }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}