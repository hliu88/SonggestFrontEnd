{"ast":null,"code":"var _jsxFileName = \"/Users/guanchenliu/Dropbox/College/CS4523/Songgest/frontend/src/App.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = async () => {\n      const data = await axios.get('/test');\n      setTest({\n        data: data.data.return,\n        loading: false\n      });\n    };\n\n    const [playlistURL, setPlaylistURL] = useState('');\n    const [playlistURL_coded, setPlaylistURL_coded] = useState('');\n    const [test, _setTest] = useState('');\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  getURL() {\n    return this.state.playlistURL;\n  }\n\n  updateState() {\n    this.setState({\n      data: 'Data updated...'\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      playlistURL: event.target.value,\n      playlistURL_coded: encodeURIComponent(this.state.playlistURL)\n    });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      submitted: true\n    });\n  }\n\n  renderFunc() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Get Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: test.loading ? '' : test.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n\n    if (this.state.submitted === null) {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Import Playlist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.playlistURL,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.submitted && this.state.playlistURL !== null && this.state.initialGet === null) {// this.componentDidMount()\n      // this.setState({initialGet: true})\n      // alert(this.state.postId)\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderFunc()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  } // render() {\n  //    return (\n  //       <div>\n  //         <form>\n  //         <label>\n  //           Name:\n  //           <input type=\"text\" name=\"name\" />\n  //         </label>\n  //         <input type=\"submit\" value=\"Submit\" />\n  //         </form>\n  //          <button onClick = {this.updateState}>CLICK</button>\n  //          <h4>{this.state.data}</h4>\n  //       </div>\n  //    );\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guanchenliu/Dropbox/College/CS4523/Songgest/frontend/src/App.js"],"names":["React","useState","useEffect","axios","defaults","baseURL","headers","post","App","Component","constructor","props","handleClick","data","get","setTest","return","loading","playlistURL","setPlaylistURL","playlistURL_coded","setPlaylistURL_coded","test","handleChange","bind","handleSubmit","updateState","getURL","state","setState","event","target","value","encodeURIComponent","submitted","renderFunc","initialGet","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState,useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const [playlistURL, setPlaylistURL] = useState('')\n    const [playlistURL_coded, setPlaylistURL_coded] = useState('')\n    const [test,setTest] = useState('')\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateState = this.updateState.bind(this);\n  };\n\n    handleClick = async() => {\n        const data = await axios.get('/test')\n        setTest({\n            data: data.data.return,\n            loading: false\n        })\n    }\n\n\n  getURL(){\n    return this.state.playlistURL\n  }\n\n  updateState() {\n     this.setState({data: 'Data updated...'})\n  }\n\n  handleChange(event) {    \n    this.setState({playlistURL: event.target.value,\n                   playlistURL_coded: encodeURIComponent(this.state.playlistURL)\n                  });  \n  }\n\n  handleSubmit(event) {\n    this.setState({submitted: true})\n  }\n\n  renderFunc(){\n    return (\n        <div className=\"container\">\n            <h2>Get Test</h2>\n            <button onClick = {handleClick}>Get Test</button>\n            <div>\n                {test.loading?'':\n                test.data}\n            </div>\n        </div>\n      );\n    if(this.state.submitted === null){\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Import Playlist:\n            <input type=\"text\" value={this.state.playlistURL} onChange={this.handleChange} />        \n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n    if(this.state.submitted && this.state.playlistURL !== null && this.state.initialGet === null){\n      // this.componentDidMount()\n      // this.setState({initialGet: true})\n      // alert(this.state.postId)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderFunc()}\n      </div>\n    );\n  }\n  // render() {\n  //    return (\n  //       <div>\n  //         <form>\n  //         <label>\n  //           Name:\n  //           <input type=\"text\" name=\"name\" />\n  //         </label>\n  //         <input type=\"submit\" value=\"Submit\" />\n  //         </form>\n\n\n  //          <button onClick = {this.updateState}>CLICK</button>\n  //          <h4>{this.state.data}</h4>\n  //       </div>\n  //    );\n  // }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}